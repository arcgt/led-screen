#include <Adafruit_NeoPixel.h>

#define LED_PIN 21 // Pin to use to send signals to WS2812B
#define LED_COUNT 256 // Number of WS2812B LEDs attached to the Arduino
Adafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800); // Setting up the NeoPixel library

// Initialise RGB image array of size 16 * 16 * 3 (paste array from `img_to_bitmap.py` script print)
int img_array_0[768] = {0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 0, 0, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 0, 0, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 0, 0, 255, 255, 255, 0, 0, 0, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 0, 0, 255, 255, 255, 0, 0, 0, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 0, 0, 255, 255, 255, 255, 126, 0, 0, 0, 0, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 0, 0, 255, 126, 0, 255, 255, 255, 0, 0, 0, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 0, 0, 255, 255, 255, 255, 126, 0, 255, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 126, 0, 255, 126, 0, 255, 255, 255, 0, 0, 0, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 0, 0, 255, 255, 255, 0, 0, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 0, 0, 0, 255, 255, 255, 0, 0, 0, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 0, 0, 0, 0, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 0, 0, 0, 0, 0, 0, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 0, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 0, 0, 0, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 0, 0, 255, 126, 0, 0, 0, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 0, 0, 0, 255, 126, 0, 0, 0, 0, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 0, 0, 255, 126, 0, 255, 126, 0, 0, 0, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 0, 0, 0, 255, 126, 0, 255, 126, 0, 0, 0, 0, 0, 183, 239, 0, 183, 239, 0, 0, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 0, 0, 0, 0, 0, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 0, 0, 0, 0, 183, 239, 0, 0, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 126, 0, 255, 126, 0, 255, 126, 0, 255, 126, 0, 0, 0, 0, 0, 183, 239, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239, 0, 183, 239};
int img_array_1[768] = {};
int r, g, b;
int count;

void setup() {
  strip.begin();           // Initialize NeoPixel object
  strip.setBrightness(5);  // Brightness (max = 255)
  strip.show();            // Initialize all pixels to 'off'
}

void loop() {
  draw_bitmap(img_array_0);
  delay(1000);
  draw_bitmap(img_array_1);
  delay(150);
}

// Function to iterate over image array and set RGB pixel colour
void draw_bitmap(int frame[768]) {
  count = 0;
  for(int pixel_index = 0; pixel_index < 256; pixel_index++) {
    r = frame[count];
    count ++;
    g = frame[count];
    count ++;
    b = frame[count];
    count ++;
    strip.setPixelColor(pixel_index, r, g, b);
  }
  strip.show(); // Update strip with new contents
}